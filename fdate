#!/usr/bin/env ruby
#
# LICENSE
# Copyright 2017 Eric Melville
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# DESCRIPTION
# fdate - quick tool to obviate silly platform differences for file dates
#
# Using hasher made life easier for computing file checksums in a heterogeneous
# environment. Then the same problem arose for stat(1) commands, even though
# the operation in question tended to be as simple as getting the file time.
# Thus, here is the same style tool.
#
# HISTORY
# 0.1 - Initial version, loop over listed files and print their mtime
#
# TODO
# Take parameters for atime and ctime
# Adjustable date formats

if ARGV.length < 1 then
    print "usage: fdate file [more files]\n"
end

a = ARGV
a.each { |f|
    if File.exists?(f) then
        t = File.mtime(f)
        print t.strftime("%Y-%m-%d %H:%M:%S")
        if a.length > 1 then
            print " " + f
        end
        print "\n"
    else
        print f + " not found\n"
    end
}
